<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="Main">
    <Product>Long Path Support for .NET</Product>
    <Company>Chessar</Company>
    <RootNamespace>$(Company)</RootNamespace>
    <AssemblyName>$(Company).LongPaths</AssemblyName>
    <TargetFrameworks>net462</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DebugSymbols>true</DebugSymbols>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AssemblyOriginatorKeyFile>..\$(Company).snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\$(Company).ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <ItemGroup Label="AdvItems">
    <None Include="..\$(Company).snk">
      <Link>$(Company).snk</Link>
    </None>
    <None Remove="*.nu*;*.zip;*.dll;*.exe;*.xdt" />
    <Content Include="*.config.*install.xdt" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Web" />
  </ItemGroup>

  <PropertyGroup Label="NuGet">
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
    <PackageId>$(AssemblyName)</PackageId>
    <VersionPrefix>1.0.5</VersionPrefix>
    <!--VersionSuffix>rc001</VersionSuffix-->
    <Title>$(Product)</Title>
    <Authors>$(Company)</Authors>
    <Copyright>Copyright © $(Company) 2018</Copyright>
    <PackageReleaseNotes>Fix for System.Configuration.Configuration.SaveAs</PackageReleaseNotes>
    <Description>$(AssemblyName) is a .NET library that allows you to enable long path support for the main System.IO classes (and others).
It is based on replacing with JMP hooks, internal functions in System.IO.Path (NormalizePath and GetFullPathInternal), which adds prefixes (\\?\ or \\?\UNC\) for paths to files/folders.
In this case, your code does not need to directly add such prefixes to the paths.

Supported platforms:
  .NET Framework 4.6.2+</Description>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://raw.githubusercontent.com/chessar/LongPaths/master/LICENSE.md</PackageLicenseUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/chessar/LongPaths/master/icon.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/chessar/LongPaths</PackageProjectUrl>
    <RepositoryUrl>https://github.com/chessar/LongPaths</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>long path jmp hook</PackageTags>
    <NeutralLanguage>en</NeutralLanguage>
    <IncludeDocumentationProjectOutputGroup>true</IncludeDocumentationProjectOutputGroup>
    <IncludeDebugSymbolsProjectOutputGroup>true</IncludeDebugSymbolsProjectOutputGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <Target Name="AfterClean" AfterTargets="Clean" Condition="'$(Configuration)' == 'Release'">
    <ItemGroup>
      <ZipFilesToDelete Include="bin\$(Configuration)\*.zip" />
      <ZipFilesToDelete Include="bin\$(Configuration)\*.tmp*" />
      <ZipFilesToDelete Include="bin\$(Configuration)\*.nupkg" />
    </ItemGroup>
    <Delete Files="@(ZipFilesToDelete)" TreatErrorsAsWarnings="false" />
  </Target>

  <Target Name="AfterBuild" AfterTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <Delete Files="bin\$(Configuration)\$(AssemblyName).$(Version).zip" TreatErrorsAsWarnings="false" />
    <Exec Condition="Exists('7z.exe')" Command="7z.exe a -tzip &quot;bin\$(Configuration)\$(AssemblyName).$(Version).zip&quot; &quot;.\bin\$(Configuration)\**\*&quot; -x!*.tmp* -x!*.zip -x!*.nu* -x!*.json -x!*.last* -x!*.CodeAnalysisLog.xml -x!*.tmp -aoa -mx9 -r -ssw -y" />
  </Target>

</Project>