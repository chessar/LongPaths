<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Product>Long Path Support for .NET</Product>
    <Company>Chessar</Company>
    <RootNamespace>$(Company)</RootNamespace>
    <AssemblyName>$(Company).LongPaths</AssemblyName>
    <TargetFrameworks>net462</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AssemblyOriginatorKeyFile>..\$(Company).snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\$(Company).ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System.Web" />
    <Reference Include="System.Drawing" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="*.nu*;*.zip;*.dll;*.exe;" />
    <Content Include="content\*.config.*install.xdt">
      <CopyToOutputDirectory>false</CopyToOutputDirectory>
      <PackagePath>content/net462</PackagePath>
    </Content>
  </ItemGroup>

  <PropertyGroup Label="NuGet">
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
    <PackageId>$(AssemblyName)</PackageId>
    <VersionPrefix>1.1.4</VersionPrefix>
    <!--VersionSuffix>rc001</VersionSuffix-->
    <Title>$(Product)</Title>
    <Authors>$(Company)</Authors>
    <Copyright>Copyright © $(Company) 2018</Copyright>
    <PackageReleaseNotes>Fix for System.Configuration and System.Security.Cryptography namespaces</PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <GithubContentUrl>https://raw.githubusercontent.com/chessar/LongPaths/master/</GithubContentUrl>
    <PackageLicenseUrl>$(GithubContentUrl)LICENSE.md</PackageLicenseUrl>
    <PackageIconUrl>$(GithubContentUrl)icon.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/chessar/LongPaths</PackageProjectUrl>
    <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>\\?\ long path jmp hook \\?\UNC\</PackageTags>
    <NeutralLanguage>en</NeutralLanguage>
    <IncludeDocumentationProjectOutputGroup>true</IncludeDocumentationProjectOutputGroup>
    <IncludeDebugSymbolsProjectOutputGroup>true</IncludeDebugSymbolsProjectOutputGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <Description>$(AssemblyName) is a .NET library that allows you to enable long path support for the main System.IO classes (and others).
It is based on replacing with JMP hooks, internal functions in System.IO.Path (NormalizePath and GetFullPathInternal), which adds prefixes (\\?\ or \\?\UNC\) for paths to files/folders.
In this case, your code does not need to directly add such prefixes to the paths.

Supported platforms:
  .NET Framework 4.6.2+</Description>
  </PropertyGroup>

  <Target Name="CustomAfterClean" AfterTargets="AfterClean" Condition="'$(Configuration)' == 'Release'">
    <ItemGroup>
      <ZipFilesToDelete Include="bin\$(Configuration)\*.zip" />
      <ZipFilesToDelete Include="bin\$(Configuration)\*.tmp*" />
      <ZipFilesToDelete Include="bin\$(Configuration)\*.nupkg" />
    </ItemGroup>
    <Delete Files="@(ZipFilesToDelete)" TreatErrorsAsWarnings="false" />
    <Message Text="CustomAfterClean OK!" Importance="high" />
  </Target>

  <Target Name="CustomAfterBuild" AfterTargets="AfterBuild" Condition="'$(Configuration)' == 'Release'">
    <Delete Files="bin\$(Configuration)\$(AssemblyName).$(Version).zip" TreatErrorsAsWarnings="false" />
    <Exec Condition="Exists('7z.exe')" Command="7z.exe a -tzip &quot;bin\$(Configuration)\$(AssemblyName).$(Version).zip&quot; &quot;.\bin\$(Configuration)\**\*&quot; -x!*.tmp* -x!*.zip -x!*.nu* -x!*.json -x!*.last* -x!*.CodeAnalysisLog.xml -x!*.tmp -aoa -mx9 -r -ssw -y" />
    <Message Text="CustomAfterBuild OK!" Importance="high" />
  </Target>

</Project>